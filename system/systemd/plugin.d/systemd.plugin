#!/bin/bash
#############################################################
#                                                           #
# systemd.plugin - handling of systemd service files        #
#                                                           #
#############################################################
#                                                           #
# Copyright 2011 by Auke Kok under GPLv2                    #
# Parts Copyrighted 2012 by Stefan Wold under GPLv2         #
#                                                           #
#############################################################


plugin_systemd_configure()
{
  local SERVICES SERVICE SYSTEMD_SERVICES
  debug_msg "plugin_systemd_configure ($@)"
  if [ -d $SCRIPT_DIRECTORY/systemd.d ]; then
    cd $SCRIPT_DIRECTORY/systemd.d

    SERVICES=$(ls -1)

    SYSTEMD_SERVICES=$(get_module_config SYSTEMD_SERVICES)
    for SERVICE in $SERVICES; do
      # don't ask for '@' services - these should always be installed but
      # never linked directly. Also ask for new or renamed services.
      if echo $SERVICE | grep -q @ || echo $SYSTEMD_SERVICES | egrep -q "(^| )$SERVICE( |$)"; then
        continue
      fi
      message "${MESSAGE_COLOR}$SERVICE: $(grep Description= $SERVICE | cut -d= -f2-)${DEFAULT_COLOR}"
      if query "Invoke $SERVICE via systemd automatically at boot ?"  y
      then
        SYSTEMD_SERVICES+=" $SERVICE"
      else
        # ignore output here - this is likely to hit "not found" errors
        systemctl disable $SERVICE > /dev/null 2>&1
        systemctl stop $SERVICE > /dev/null 2>&1
      fi
    done
    cd $SCRIPT_DIRECTORY

    # Look for renamed or removed services and stop and disable them.
    # If we don't do it here it will be too late and there will be rogue
    # processes left behind after a successful install
    for SERVICE in $SYSTEMD_SERVICES; do
      if ! echo $SERVICES | egrep -q "(^| )$SERVICE( |$)"; then
        verbose_msg "Stopping removed service ($SERVICE)"
        systemctl stop $SERVICE &> /dev/null
        systemctl disable $SERVICE &> /dev/null
        SYSTEMD_SERVICES=$(echo $SYSTEMD_SERVICES | sed -r "s;(^| )$SERVICE( |$);\1;")
      fi
    done

    set_module_config "SYSTEMD_SERVICES" "$SYSTEMD_SERVICES"
  fi
  return 2
}


plugin_systemd_post_build()
{
  local SERVICES SERVICE SYSTEMDUNITDIR
  debug_msg "plugin_systemd_post_build ($@)"

  local SYSTEMDUNITDIR=$(pkg-config systemd --variable=systemdsystemunitdir)

  if [ -d $SCRIPT_DIRECTORY/systemd.d ]; then
    invoke_installwatch
    verbose_msg "handling systemd.d services" | tee -a $C_LOG
    cd $SCRIPT_DIRECTORY/systemd.d
    SERVICES=$(ls -1)

    for SERVICE in $SERVICES; do
      /usr/bin/install -g 0 -o 0 -m 0644 $SERVICE $SYSTEMDUNITDIR/$SERVICE
    done
    cd $SCRIPT_DIRECTORY
    devoke_installwatch
  fi

  systemctl daemon-reload > /dev/null 2>&1

  for SERVICE in $SYSTEMD_SERVICES; do
    systemctl disable $SERVICE
    invoke_installwatch
    systemctl enable $SERVICE
    devoke_installwatch

    # start-or-restart it
    if [ "${LUNAR_RESTART_SERVICES:=on}" == "on" ]; then
      systemctl restart $SERVICE
    fi

  done
  return 2
}


plugin_systemd_tmpfilesd_post_build() {
  local FILE SYSTEMDTEMPFILES
  debug_msg "plugin_systemd_tmpfilesd_post_build ($@)"

  SYSTEMDTEMPFILES=$(pkg-config systemd --variable=prefix)/lib/tmpfiles.d

  if [ -d $SCRIPT_DIRECTORY/tmpfiles.d ]; then
    invoke_installwatch
    verbose_msg "handling systemd tmpfiles.d files"

    for FILE in $SCRIPT_DIRECTORY/tmpfiles.d/*; do
      /usr/bin/install -g 0 -o 0 -m 0644 $FILE $SYSTEMDTEMPFILES/
    done
    devoke_installwatch
  fi

  return 2
}

plugin_systemd_disable_services_pre_remove() {
  local SYSTEMD_SERVICES
  debug_msg "plugin_systemd_disable_services_pre_remove ($@)"

  SYSTEMD_SERVICES=$(get_module_config SYSTEMD_SERVICES)
  for SERVICE in $SYSTEMD_SERVICES; do
    verbose_msg "Stopping and disabling systemd service ($SERVICE)"
    systemctl stop $SERVICE &> /dev/null
    systemctl disable $SERVICE &> /dev/null
  done

  return 2
}

plugin_register BUILD_CONFIGURE plugin_systemd_configure
plugin_register BUILD_POST_BUILD plugin_systemd_post_build
plugin_register BUILD_POST_BUILD plugin_systemd_tmpfilesd_post_build
plugin_register BUILD_PRE_REMOVE plugin_systemd_disable_services_pre_remove
